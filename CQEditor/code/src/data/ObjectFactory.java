//
// This file was generated by the JavaTM Architecture for XML Binding(JAXB) Reference Implementation, v2.2.8-b130911.1802 
// See <a href="http://java.sun.com/xml/jaxb">http://java.sun.com/xml/jaxb</a> 
// Any modifications to this file will be lost upon recompilation of the source schema. 
// Generated on: 2019.04.03 at 12:59:14 PM SAST 
//


package data;

import javax.xml.bind.JAXBElement;
import javax.xml.bind.annotation.XmlElementDecl;
import javax.xml.bind.annotation.XmlRegistry;
import javax.xml.namespace.QName;


/**
 * This object contains factory methods for each 
 * Java content interface and Java element interface 
 * generated in the generated package. 
 * <p>An ObjectFactory allows you to programatically 
 * construct new instances of the Java representation 
 * for XML content. The Java representation of XML 
 * content can consist of schema derived interfaces 
 * and classes representing the binding of schema 
 * type definitions, element declarations and model 
 * groups.  Factory methods for each of these are 
 * provided in this class.
 * 
 */
@XmlRegistry
public class ObjectFactory {

    private final static QName _OptionalChunk_QNAME = new QName("", "OptionalChunk");
    private final static QName _EntityChunk_QNAME = new QName("", "EntityChunk");
    private final static QName _Record_QNAME = new QName("", "Record");
    private final static QName _TextChunk_QNAME = new QName("", "TextChunk");
    private final static QName _CQTemplate_QNAME = new QName("", "CQTemplate");
    private final static QName _CQ_QNAME = new QName("", "CQ");
    private final static QName _PredicateChunk_QNAME = new QName("", "PredicateChunk");
    private final static QName _CQOntology_QNAME = new QName("", "Ontology");

    /**
     * Create a new ObjectFactory that can be used to create new instances of schema derived classes for package: generated
     * 
     */
    public ObjectFactory() {
    }

    /**
     * Create an instance of {@link TextChunk }
     *
     */
    public TextChunk createTextChunk() {
        return new TextChunk();
    }

    /**
     * Create an instance of {@link EntityChunk }
     *
     */
    public EntityChunk createEntityChunk() {
        return new EntityChunk();
    }

    /**
     * Create an instance of {@link OptionalChunk }
     *
     */
    public OptionalChunk createOptionalChunk() {
        return new OptionalChunk();
    }

    /**
     * Create an instance of {@link Ontology }
     * 
     */
    public Ontology createOntology() {
        return new Ontology();
    }

    /**
     * Create an instance of {@link RecordList }
     * 
     */
    public RecordList createRecordList() {
        return new RecordList();
    }

    /**
     * Create an instance of {@link CQTemplate }
     * 
     */
    public CQTemplate createCQTemplate() {
        return new CQTemplate();
    }

    /**
     * Create an instance of {@link CQ }
     * 
     */
    public CQ createCQ() {
        return new CQ();
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OptionalChunk }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "OptionalChunk")
    public JAXBElement<OptionalChunk> createOptionalChunk(OptionalChunk value) {
        return new JAXBElement<OptionalChunk>(_OptionalChunk_QNAME, OptionalChunk.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link TemplateChunk }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "EntityChunk")
    public JAXBElement<EntityChunk> createEntityChunk(EntityChunk value) {
        return new JAXBElement<EntityChunk>(_EntityChunk_QNAME, EntityChunk.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Object }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Record")
    public JAXBElement<Object> createRecord(Object value) {
        return new JAXBElement<Object>(_Record_QNAME, Object.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OptionalChunk }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "TextChunk", substitutionHeadNamespace = "", substitutionHeadName = "OptionalChunk")
    public JAXBElement<OptionalChunk> createTextChunk(OptionalChunk value) {
        return new JAXBElement<OptionalChunk>(_TextChunk_QNAME, OptionalChunk.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CQTemplate }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CQTemplate", substitutionHeadNamespace = "", substitutionHeadName = "Record")
    public JAXBElement<CQTemplate> createCQTemplate(CQTemplate value) {
        return new JAXBElement<CQTemplate>(_CQTemplate_QNAME, CQTemplate.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link CQ }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CQ", substitutionHeadNamespace = "", substitutionHeadName = "Record")
    public JAXBElement<CQ> createCQ(CQ value) {
        return new JAXBElement<CQ>(_CQ_QNAME, CQ.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link OptionalChunk }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "PredicateChunk", substitutionHeadNamespace = "", substitutionHeadName = "OptionalChunk")
    public JAXBElement<OptionalChunk> createPredicateChunk(OptionalChunk value) {
        return new JAXBElement<OptionalChunk>(_PredicateChunk_QNAME, OptionalChunk.class, null, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Object }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "EntityChunk", scope = CQTemplate.class)
    public JAXBElement<EntityChunk> createCQTemplateEntityChunk(EntityChunk value) {
        return new JAXBElement<EntityChunk>(_EntityChunk_QNAME, EntityChunk.class, CQTemplate.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Object }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CQTemplate", scope = CQTemplate.class)
    public JAXBElement<Object> createCQTemplateCQTemplate(Object value) {
        return new JAXBElement<Object>(_CQTemplate_QNAME, Object.class, CQTemplate.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Object }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "Ontology", scope = CQ.class)
    public JAXBElement<Object> createCQOntology(Object value) {
        return new JAXBElement<Object>(_CQOntology_QNAME, Object.class, CQ.class, value);
    }

    /**
     * Create an instance of {@link JAXBElement }{@code <}{@link Object }{@code >}}
     * 
     */
    @XmlElementDecl(namespace = "", name = "CQTemplate", scope = CQ.class)
    public JAXBElement<CQTemplate> createCQCQTemplate(CQTemplate value) {
        return new JAXBElement<CQTemplate>(_CQTemplate_QNAME, CQTemplate.class, CQ.class, value);
    }

}
